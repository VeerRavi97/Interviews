Data structure and Algorithm
Lowest Common Ancestor in a Binary Search Tree.
Sorted Linked List to Balanced BST
Function to check if a singly linked list is palindrome
Clone a linked list with next and random pointer
Bit-Manipulation question: swap MSB and LSB of an integer, asked me to code it
autocomplete text box
finding a intersection point in two linked list 
Check for balanced parentheses in an expression
DSA questions on Strings, Linked Lists and Bit Manipulation.
Given 2 strings find number of occurrences of one in another(KMP)
How to check if a given number is a power of 2, only using bitwise operators.
N meetings in a room
Reverse a stack without using extra space
Construct a tree from pre-order and in-order traversal.
construct a balanced tree.
Count the number of contiguous bits occurring more than once.
clear the first set bit (MSB) without traversing all the bitsgiven a string, there is only 1 character that occurs once, rest can occur any number of times. Find that unique character without using extra space.
given two strings, delete the common words, i.e the words occurring in both the strings
Count number of bits to be flipped to convert A to B
Validate an IP Address
Sort an array of 0s, 1s and 2s
given a string find longest palindromic substring.
Searching Algorithms
What is AVL tree?(He asked to explain and made me to balance an AVL tree as well as write a code for it)
Why is it not efficient/disadvantageous to use arrays instead Linked Lists
Difference btw DFS, BFS write a code
Heapsort and Quicksort along with their analysis(time complexities
Create and insert function in Binary search tree (BST)
Access specifiers with example
Print left view of a binary tree.
Min distance between two given nodes of a Binary Tree
Reverse the bits of a number and count the number of set bits in the given number.
Find the Next Permutation number.
convert a given single Linked list to BST
Flatten a tree into a linked list
















C and C++

C memory map, gave a program and made me point out which variable goes to which part of memory
How the C program compile. Explain all the phases 
Structures and unions, the concept of padding in structures.
Structure padding and packing. Who do this padding and packing
Structure and Union. Difference between these two and where we used them.
what are the applications of Unions? and problem-related to Unions.
How memory is allocated using calloc and malloc functions. malloc vs calloc
What is volatile keyword?. Explain any other compiler optimization techniques.
Extern variable and function.
Different scopes of variables and to explain when each of them is used and why, when and how do we use the extern keyword.
What are double pointers. What is their use?
What are wild pointers and void pointers? When are they used?
int const *ptr and int * const ptr
What is a void pointer and how do we use it.
What is Dangling pointer?
Function Pointer in C
What is memory leak? Give example by code. In what scenario   
memory leak is critical and problematic?
what will happen if i call free(NULL)? Any error? 
(The free function causes the space pointed to by ptr to be deallocated, that is,made available for further allocation.
 If ptr is a null pointer, no action occurs)
How is free keyword different from delete. How does free() know the size of memory to be deallocated?
Let us suppose there are multiple .c files and you want a function from a particular file can only be accessed in that c file only. (Ans- Use static keyword)
What is the difference between call by value and call by reference? Which is better and why?



While passing 2d array, why it is necessary to pass number of columns?
2D array dynamic memory allocation
OOPS concepts asked me about Polymorphism, Virtual Class, Overloading, Inheritance
Diamond problem in OOPs, write down the code and solve the problem
find whether a machine is little endian or big endian.
Virtual functions,functions overloading, overriding.
questions on macros in C, inline functions etc
Write your own memcpy function handling all the corner cases.
What is the use of pure virtual functions in c++.
concept of VTable
singleton class
Implement your own memcopy ? What is the problem with memcopy. ?
Write a code which can replace the strlen() function.
What is stackoverflow and when does it occur. How to handle it.
Applications of stacks.
Their notation and what are the different OS which one is big endian and which one is little endian.
strcmp
write my own sizeof operator
Lots of questions on Function pointers, how, usage, examples
strstr function
Oops concepts, Static and dynamic polymorphism, Vtable, Vptr.
















Operating Systems

Draw the block diagram of a computer and explain?
What is the real-time OS?
What are its types?
How do you implement RTOS? which shceduling algo is used? How to achieve zero error rate in Hard RTOS?
Difference between Kernel and Operating System.
system calls, dual mode operation, Different System calls and why do we use them
what are the different intermediate files while compiling and running a C program.
Stack vs. Heap and their content
I have defined 2 global variables, one is initialized and another is uninitialized, in which segments would they be stored?
What are Static(.lib) and Dynamic Libraries(.dll)
Static linking and dynamic linking, how they are implemented and examples of both
What is static and dynamic linking. How does a compiler know if a function belongs to a statically linked source or a dynamically linked source.
process state diagram.
What is there in Process Control Block.
How does a process look like in memory, the difference between global variables and static variables?
Difference between Scheduler and Dispatcher.
what are various ways for interprocess communication
shared memory systems (like how exactly the memory is shared between processes in different scenario)
Tell me about process scheduling algorithms?What is round robin algorithm?
What is the most efficient process scheduling algorithm and why
(For each specific problem, the efficient algorithms could be different ones. Hence, the most optimal algorithm can’t be determined.)
Scheduling Algorithms plus Watchdog timer 
what is priority inversion and priority inheritance.
Priority Inversion and ways to tackle it
race condition, deadlock, critical section problem with examples
What are semaphores and what are spinlocks?
What are locks
What is mutex ?What is semaphore? Difference between them.
Mutex vs Binary semaphore? Are they logically equivalent ?
Mutex vs. Semaphore and their implementation
Write a code where deadlock is possible. How will you remove it?
Deadlock and its avoidance
What is watchdog timer.
Memory questions like Best fit, worst fit, average fit questions.
memory management/ contiguous/non-contiguous/fixed/variable
What is the difference between physical and virtual address.
Why is virtual address used?
Explain the role of MMU
Page size in linux.
Which address is known to CPU?
What TLB?, Is it cache or register, where is it located on the circuit board, how it helps in performance.



Questions related to threads and processes
virtual memory and paging.
Page fault and steps followed to handle it.
What is Cache Coherence Protocol and when do we use them.
virtual addresses – what are they and why they are needed, TLB working, paging, process’ view of memory 
What is demand paging? How to map logical to physical address?
What is virtual memory  and why do we use it?https://www.geeksforgeeks.org/virtual-memory-operating-systems/
paging, segmentation, Deadlock? What is wait and signal in the OS?
What is thrashing and how can we avoid it.
what is Segmentation, give some memory management techniques
Segmentation, Paging, Demand Paging and Swapping.
Threading concept and how stack behave in multi-threading environment and few pThread concepts
Page fault and steps followed to handle it
Compiler stages with brief explanation about each
How compiler does intermediate code optimization and few examples of them.

















Resume and HR

Detailed discussions over my projects.
what makes you different from other candidates.
Why do you want to join Qualcomm.
different stages in the development cycle of a software
What happened when you enter a URL on browser. Explain all in detail. 






puzzle